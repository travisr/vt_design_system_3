name: Build and Deploy

on:
  push:
    branches: [main]
    tags: ['v*']
  pull_request:
    branches: [main]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
  packages: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: 'pages'
  cancel-in-progress: false

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_DEMO: ${{ github.repository }}/demo

jobs:
  # Build and publish NPM package
  publish-package:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: venntier-design-system/package-lock.json
          registry-url: 'https://npm.pkg.github.com'

      - name: Install dependencies
        run: |
          cd venntier-design-system
          npm ci

      - name: Build library
        run: |
          cd venntier-design-system
          npm run build:lib

      - name: Update package.json for publishing
        run: |
          cd venntier-design-system/dist/design-system
          # Update package.json with repository info
          npm pkg set repository.type=git
          npm pkg set repository.url="git+https://github.com/${{ github.repository }}.git"
          npm pkg set publishConfig.registry="https://npm.pkg.github.com"
          npm pkg set publishConfig.access=restricted

      - name: Publish to GitHub Packages
        run: |
          cd venntier-design-system/dist/design-system
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Build demo application
  build-demo:
    runs-on: ubuntu-latest
    outputs:
      demo-artifact: ${{ steps.upload-demo.outputs.artifact-id }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: venntier-design-system/package-lock.json

      - name: Install dependencies
        run: |
          cd venntier-design-system
          npm ci

      - name: Build demo app
        run: |
          cd venntier-design-system
          npm run build:demo -- --base-href=/vt_design_system_3/
        env:
          NODE_OPTIONS: --max-old-space-size=4096

      - name: Upload demo artifact
        id: upload-demo
        uses: actions/upload-pages-artifact@v3
        with:
          name: demo-app
          path: venntier-design-system/dist/demo/browser

  # Build and push container images
  build-containers:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for demo
        id: meta-demo
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_DEMO }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-

      - name: Build and push demo image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: venntier-design-system/Dockerfile
          push: true
          tags: ${{ steps.meta-demo.outputs.tags }}
          labels: ${{ steps.meta-demo.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Deploy to GitHub Pages (main branch only)
  deploy-pages:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: build-demo
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: demo-app
