// Venntier Design System - Main Theme File
@use '@angular/material' as mat;
@use './themes/core-bulletproof' as core;
@use './themes/extensions-safe' as extensions;
@use './components' as components;
@use './utilities/layout' as layout;

// Import Inter font weights needed
@import '@fontsource/inter/200.css';
@import '@fontsource/inter/300.css';
@import '@fontsource/inter/400.css';
@import '@fontsource/inter/500.css';

// Include Material core styles (only once)
@include mat.core;

// Include Material elevation classes (for utility usage)
@include mat.elevation-classes;

// Include Material app background (for body styling)
@include mat.app-background;

// Apply bulletproof core theme (minimal, stable foundation)
@include core.vt-theme-bulletproof;

// Apply safe extensions (OpenAI styling, enhanced components) - consolidated into core
// Note: Redundant color/density variants removed here to avoid duplication
// @include extensions.vt-safe-extensions;

// ============================================================================
// ANGULAR MATERIAL 20 COMPONENT OVERRIDES
// ============================================================================
// Use proper Angular Material 20 component override mixins
// These set the internal component tokens used by Angular Material

// Button component overrides - sets internal button tokens
@include mat.button-overrides(
  (
    filled-container-color: var(--mat-sys-tertiary),
    filled-label-text-color: var(--mat-sys-on-tertiary),
    filled-disabled-container-color: var(--mat-sys-surface-variant),
    filled-disabled-label-text-color: var(--mat-sys-on-surface-variant),
    outlined-outline-color: var(--mat-sys-outline),
    outlined-label-text-color: var(--mat-sys-on-surface),
    outlined-disabled-outline-color: var(--mat-sys-outline-variant),
    text-label-text-color: var(--mat-sys-on-surface),
    text-disabled-label-text-color: var(--mat-sys-on-surface-variant),
  )
);

// FAB component overrides - sets internal FAB tokens
@include mat.fab-overrides(
  (
    disabled-state-container-color: var(--mat-sys-surface-variant),
  )
);

// Apply component themes AFTER Material themes to override
// NOTE: Most component styling is now handled by mat.component-overrides() in _core-refined.scss

// Apply navigation overrides globally (includes sidenav styling)
@include components.vt-navigation-overrides;

// Apply input overrides globally
@include components.vt-input-theme;

// Apply list overrides globally
@include components.vt-list-overrides;

// Apply toolbar theme globally
@include components.vt-toolbar-theme;

// Apply icon theme globally
@include components.vt-icon-theme;

// Include Angular Material typography hierarchy classes
// This provides .mat-headline-large, .mat-body-large, etc. classes
// Create a minimal theme for typography hierarchy
$typography-theme: mat.define-theme(
  (
    color: (
      theme-type: light,
      use-system-variables: true,
    ),
    typography: (
      use-system-variables: true,
    ),
    density: (
      scale: 0,
    ),
  )
);

@include mat.typography-hierarchy($typography-theme);

// Include layout utilities for demo and application use
// These are included as CSS classes, not mixins

// Global styles - use our custom theme tokens
html {
  font-family: var(--mat-sys-body-large-font);
  font-size: 16px;
  line-height: 1.5;
  color: var(--mat-sys-on-surface);
  background-color: var(--mat-sys-surface);
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  scroll-behavior: smooth;

  // ============================================================================
  // COMPONENT TOKEN CSS CUSTOM PROPERTIES
  // ============================================================================
  // These CSS custom properties are required by our foundation tests
  // They complement the Angular Material 20 component override mixins above
  // This hybrid approach ensures both Angular Material 20 compliance AND test compatibility

  /* Removed manual component CSS variable backfills in favor of official
     Angular Material component override mixins (mat.*-overrides). */
}

// MD3 AUTOMATIC DARK THEME: No manual dark theme selectors needed
// Dark mode is now handled automatically via color-scheme: light dark
// and light-dark() functions in the theme tokens

// Base resets - CRITICAL: Fix serif font fallback issue
html,
body {
  font-family:
    Inter,
    system-ui,
    -apple-system,
    sans-serif;
}

* {
  box-sizing: border-box;
  font-family: inherit;
}

// CRITICAL: Preserve Material Icons font
mat-icon,
.material-icons,
.material-icons-outlined,
.material-icons-round,
.material-icons-sharp,
.material-icons-two-tone {
  font-family: 'Material Icons', sans-serif;
}

// Merged with html selector above

body {
  margin: 0;
  padding: 0;
  font-family: var(--mat-sys-body-large-font);
  color: var(--mat-sys-on-surface);
  background-color: var(--mat-sys-surface);
}

// Ensure all text elements use our custom fonts and colors
h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: var(--mat-sys-headline-large-font);
  color: var(--mat-sys-on-surface);
  margin: 0;
}

p,
span:not(.mdc-button__label),
div,
a,
li,
td,
th {
  font-family: var(--mat-sys-body-large-font);
  color: var(--mat-sys-on-surface);
}

// Links are handled further down in the file

// Remove default focus outlines in favor of custom ones
*:focus {
  outline: none;
}

// OpenAI-style focus states - subtle shadows instead of outlines
// Exclude input elements to avoid interfering with Material form fields
*:focus-visible:not(input, textarea) {
  outline: none;
  box-shadow:
    0 0 0 2px var(--mat-sys-surface),
    0 0 0 4px var(--mat-sys-focus-ring);
  border-radius: var(--mat-sys-shape-corner-small);
}

// Specific focus states for interactive elements (inputs removed for standard Material styling)
button:focus-visible,
a:focus-visible {
  outline: none;
  box-shadow:
    0 0 0 2px var(--mat-sys-surface),
    0 0 0 3px var(--mat-sys-focus-ring);
}

// Smooth scrolling is now handled in the consolidated html rule above

// Selection colors
::selection {
  background-color: var(--mat-sys-selected);
  color: var(--mat-sys-on-surface);
}

// Scrollbar styling (webkit browsers)
::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

::-webkit-scrollbar-track {
  background: var(--mat-sys-surface);
}

::-webkit-scrollbar-thumb {
  background: var(--mat-sys-outline);
  border-radius: var(--mat-sys-shape-corner-full);

  &:hover {
    background: var(--mat-sys-on-surface-variant);
  }
}

// Links - updated to use our custom theme tokens
a {
  color: var(--mat-sys-primary);
  text-decoration: none;
  transition: color 0.2s ease;

  &:hover {
    color: var(--mat-sys-tertiary);
    text-decoration: underline;
  }

  &:focus-visible {
    outline: none;
    box-shadow:
      0 0 0 2px var(--mat-sys-surface),
      0 0 0 3px var(--mat-sys-primary);
    border-radius: 4px;
  }
}

// Code blocks
code {
  font-family: var(--mat-sys-code-font);
  font-size: var(--mat-sys-code-size);
  background-color: var(--mat-sys-surface-variant);
  padding: 2px 6px;
  border-radius: var(--mat-sys-shape-corner-small);
}

pre {
  font-family: var(--mat-sys-code-font);
  font-size: var(--mat-sys-code-size);
  background-color: var(--mat-sys-surface-variant);
  padding: var(--mat-sys-spacing-4);
  border-radius: var(--mat-sys-shape-corner-medium);
  overflow-x: auto;

  code {
    background: none;
    padding: 0;
  }
}

// Utility: Screen reader only
.vt-sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}
