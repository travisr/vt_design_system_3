@use 'sass:map';

// ============================================================================
// MOTION REFERENCE TOKENS - Raw motion values (single source of truth)
// ============================================================================
// Smooth, subtle animations for OpenAI aesthetic

// Duration scale
$duration-instant: 0ms;
$duration-shortest: 100ms;
$duration-short: 200ms;
$duration-medium: 300ms;
$duration-long: 400ms;
$duration-longer: 500ms;
$duration-longest: 600ms;

// Easing functions (Material Design standard)
$easing-standard: cubic-bezier(0.4, 0, 0.2, 1); // Standard curve
$easing-decelerate: cubic-bezier(0, 0, 0.2, 1); // Decelerate curve
$easing-accelerate: cubic-bezier(0.4, 0, 1, 1); // Accelerate curve
$easing-sharp: cubic-bezier(0.4, 0, 0.6, 1); // Sharp curve
$easing-emphasized: cubic-bezier(0.2, 0, 0, 1); // Emphasized

// ============================================================================
// SEMANTIC MOTION MAPPINGS (for Angular Material theming API)
// ============================================================================
// These map our reference tokens to semantic roles that Angular Material understands

// Motion mappings
$motion-tokens: (
  // Duration mappings
  duration-instant: $duration-instant,
  duration-shortest: $duration-shortest,
  duration-short: $duration-short,
  duration-medium: $duration-medium,
  duration-long: $duration-long,
  duration-longer: $duration-longer,
  duration-longest: $duration-longest,

  // Easing mappings
  easing-standard: $easing-standard,
  easing-decelerate: $easing-decelerate,
  easing-accelerate: $easing-accelerate,
  easing-sharp: $easing-sharp,
  easing-emphasized: $easing-emphasized,
  easing-linear: linear
);

// Component-specific motion mappings
$component-motion: (
  // Button transitions
  button: (
      background-color: $duration-short $easing-standard,
      transform: $duration-shortest $easing-standard,
      box-shadow: $duration-short $easing-standard,
    ),
  // Card transitions
  card: (
      transform: $duration-medium $easing-standard,
      box-shadow: $duration-medium $easing-standard,
    ),
  // Input transitions
  input: (
      border-color: $duration-short $easing-standard,
      background-color: $duration-short $easing-standard,
    ),
  // Common transitions
  fade: (
      opacity: $duration-short $easing-standard,
    ),
  slide: (
    transform: $duration-medium $easing-decelerate,
  ),
  expand: (
    max-height: $duration-medium $easing-standard,
    opacity: $duration-short $easing-standard,
  ),
  // Interactive state transitions
  hover: (
      background-color: $duration-shortest $easing-standard,
      border-color: $duration-shortest $easing-standard,
      color: $duration-shortest $easing-standard,
    ),
  focus: (
    outline: $duration-shortest $easing-standard,
    box-shadow: $duration-shortest $easing-standard,
  )
);

// ============================================================================
// UTILITY FUNCTIONS
// ============================================================================

// Get a motion reference token value
@function get-motion($name) {
  @if map.has-key($motion-tokens, $name) {
    @return map.get($motion-tokens, $name);
  } @else {
    @error "Motion token '#{$name}' not found in motion map.";
  }
}

// Animation keyframes
@keyframes vt-fade-in {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@keyframes vt-fade-out {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
  }
}

@keyframes vt-slide-in-up {
  from {
    transform: translateY(8px);
    opacity: 0;
  }

  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes vt-slide-in-down {
  from {
    transform: translateY(-8px);
    opacity: 0;
  }

  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes vt-scale-in {
  from {
    transform: scale(0.95);
    opacity: 0;
  }

  to {
    transform: scale(1);
    opacity: 1;
  }
}

// Animation keyframes are preserved for component usage
