@use '@angular/material' as mat;
@use '../tokens' as tokens;

// Define the base theme structure (only once)
@mixin vt-material-base-theme() {
  $theme: mat.define-theme(
    (
      color: (
        theme-type: light,
        use-system-variables: true,
        system-variables-prefix: md-sys-color,
      ),
      typography: (
        use-system-variables: true,
        system-variables-prefix: md-sys-typescale,
      ),
    )
  );

  // M3 themes must be wrapped in a selector
  html {
    @include mat.all-component-themes($theme);
  }

  @include vt-component-overrides-refined;
}

// Apply color scheme for light/dark modes
@mixin vt-material-colors($theme-type: 'light') {
  @if $theme-type == 'dark' {
    // Apply dark theme color tokens
    @include tokens.apply-dark-colors;
  } @else {
    // Apply light theme color tokens (default)
    @include tokens.apply-light-colors;
  }
}

@mixin vt-component-overrides-refined() {
  // Global refinements - use CSS custom properties instead of !important
  :root {
    --mdc-elevation-box-shadow-for-gss: none;
    --vt-surface-background: var(--md-sys-color-surface);
    --vt-on-surface-text: var(--md-sys-color-on-surface);
  }

  // Icon button specific overrides with higher specificity
  // Using button element selector for maximum specificity
  .vt-theme button.mat-mdc-icon-button,
  body button.mat-mdc-icon-button,
  button.mat-mdc-icon-button.mat-mdc-button-base {
    // Override the container size to be square
    --mdc-icon-button-state-layer-size: 48px;
    --mdc-icon-button-icon-size: 20px;

    width: 48px;
    height: 48px;
    padding: 14px; // Centers a 20px icon in 48px button
    border-radius: 50%;
  }

  // Select panel dropdown with higher specificity
  .mat-mdc-select-panel {
    --mat-option-hover-state-layer-color: var(--md-sys-color-hover);
    --mat-option-selected-state-layer-color: var(--md-sys-color-selected);
    --mat-option-focus-state-layer-color: var(--md-sys-color-hover);

    border: 1px solid var(--md-sys-color-outline-variant);
    border-radius: 6px;
    box-shadow: 0 2px 8px var(--md-sys-color-shadow);
    margin-top: 4px;

    .mat-mdc-option {
      height: 40px;
      padding: 0 16px;
      font-size: 14px;

      &:hover {
        background-color: var(--md-sys-color-hover);
      }

      &.mat-mdc-option-active,
      &.mdc-list-item--selected {
        background-color: var(--md-sys-color-selected);
        color: var(--md-sys-color-on-surface);
      }
    }
  }

  // Wrap all component overrides in a single .vt-theme class for higher specificity
  .vt-theme {
    // Body styles with proper CSS custom property usage
    background: var(--vt-surface-background);
    color: var(--vt-on-surface-text);
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;

    // Remove shadows using higher specificity
    [class*='mat-elevation-z'],
    [class*='mat-mdc-elevation'],
    .mat-mdc-card,
    .mat-mdc-menu-panel,
    .mat-mdc-dialog-container {
      box-shadow: none;
    }

    // BUTTONS - Use CSS custom properties and higher specificity
    // Regular buttons (not icon buttons)
    .mat-mdc-button,
    .mat-mdc-raised-button,
    .mat-mdc-flat-button,
    .mat-mdc-stroked-button {
      --mdc-text-button-container-height: 40px;
      --mdc-filled-button-container-height: 40px;
      --mdc-outlined-button-container-height: 40px;
      --mdc-text-button-label-text-font: var(--md-sys-typescale-label-large-font);
      --mdc-text-button-label-text-size: 14px;
      --mdc-text-button-label-text-weight: 400;
      --mdc-text-button-label-text-tracking: 0.01em;

      height: 40px;
      min-height: 40px;
      border-radius: 6px;
      padding: 0 20px;
      transition: all 0.15s ease;
      box-shadow: none;

      // Disable ripples using CSS variables
      --mat-ripple-color: transparent;
      --mdc-ripple-color: transparent;
      --mdc-ripple-hover-opacity: 0;
      --mdc-ripple-focus-opacity: 0;
      --mdc-ripple-pressed-opacity: 0;
    }

    // Icon buttons have different specs - must be square
    .mat-mdc-icon-button {
      // Override the container size to be square
      --mdc-icon-button-state-layer-size: 48px;
      --mdc-icon-button-icon-size: 20px;

      width: 48px;
      height: 48px;
      padding: 14px; // Centers a 20px icon in 48px button
      transition: all 0.15s ease;
      box-shadow: none;
      border-radius: 50%;

      // Disable ripples using CSS variables
      --mat-ripple-color: transparent;
      --mdc-ripple-color: transparent;
      --mdc-ripple-hover-opacity: 0;
      --mdc-ripple-focus-opacity: 0;
      --mdc-ripple-pressed-opacity: 0;
    }

    // Primary button (green CTA) - Use CSS custom properties
    .mat-mdc-raised-button.mat-primary,
    .mat-mdc-flat-button.mat-primary {
      --mdc-filled-button-container-color: var(--md-sys-color-tertiary);
      --mdc-filled-button-label-text-color: var(--md-sys-color-on-tertiary);
      --mdc-filled-button-hover-container-color: #0d9d6e;
      --mdc-filled-button-label-text-weight: 500;

      &:not(:disabled):hover {
        transform: translateY(-1px);
      }

      &:not(:disabled):active {
        transform: translateY(0);
      }
    }

    // Secondary (outlined) - Use Material's outlined button tokens
    .mat-mdc-stroked-button,
    .mat-mdc-outlined-button {
      --mdc-outlined-button-container-color: transparent;
      --mdc-outlined-button-label-text-color: var(--md-sys-color-on-surface);
      --mdc-outlined-button-outline-color: var(--md-sys-color-outline);
      --mdc-outlined-button-hover-container-color: var(--md-sys-color-hover);
      --mdc-outlined-button-hover-outline-color: var(--md-sys-color-outline-variant);
    }

    // Tertiary (flat) and Text buttons - Use proper CSS custom properties
    .mat-mdc-flat-button:not(.mat-primary) {
      --mdc-filled-button-container-color: var(--md-sys-color-surface-container);
      --mdc-filled-button-label-text-color: var(--md-sys-color-on-surface);
      --mdc-filled-button-hover-container-color: var(--md-sys-color-surface-container-high);

      border: none;
    }

    .mat-mdc-button {
      --mdc-text-button-container-color: transparent;
      --mdc-text-button-label-text-color: var(--md-sys-color-on-surface-variant);
      --mdc-text-button-hover-container-color: var(--md-sys-color-hover);
      --mdc-text-button-hover-label-text-color: var(--md-sys-color-on-surface);

      padding: 0 12px;
    }

    // Disabled state - using CSS custom properties
    button:disabled {
      --mdc-text-button-disabled-label-text-color: var(--md-sys-color-on-surface-variant);
      --mdc-filled-button-disabled-container-color: var(--md-sys-color-surface-variant);
      --mdc-filled-button-disabled-label-text-color: var(--md-sys-color-on-surface-variant);

      opacity: 0.4;
    }

    // CARDS - Use CSS custom properties and higher specificity
    .mat-mdc-card {
      --mdc-elevated-card-container-color: var(--md-sys-color-surface);
      --mdc-elevated-card-container-shape: 8px;

      border: 1px solid var(--md-sys-color-outline-variant);
      border-radius: 8px;
      padding: 24px;
      background-color: var(--md-sys-color-surface);
      margin-bottom: 24px;

      .mat-mdc-card-header {
        padding: 0 0 20px;

        .mat-mdc-card-title {
          font-size: 16px;
          font-weight: 600;
          color: var(--md-sys-color-on-surface);
          margin: 0;
        }
      }

      .mat-mdc-card-content {
        padding: 0;

        > *:not(:last-child) {
          margin-bottom: 16px;
        }
      }
    }

    // FORM FIELDS - Proper CSS custom properties and higher specificity
    .mat-mdc-form-field {
      --mdc-filled-text-field-container-height: 44px;
      --mdc-outlined-text-field-container-height: 44px;
      --mdc-filled-text-field-container-color: var(--md-sys-color-surface);
      --mdc-outlined-text-field-container-shape: 6px;
      --mdc-outlined-text-field-outline-color: var(--md-sys-color-outline);
      --mdc-outlined-text-field-hover-outline-color: var(--md-sys-color-outline-variant);
      --mdc-outlined-text-field-focus-outline-color: var(--md-sys-color-tertiary);
      --mdc-outlined-text-field-focus-outline-width: 2px;
      --mdc-outlined-text-field-label-text-color: var(--md-sys-color-on-surface-variant);
      --mdc-outlined-text-field-input-text-color: var(--md-sys-color-on-surface);
      --mdc-outlined-text-field-placeholder-text-color: var(--md-sys-color-on-surface-variant);

      width: 100%;
      margin-bottom: 20px;

      .mat-mdc-text-field-wrapper {
        padding: 0;
      }

      .mat-mdc-form-field-flex {
        align-items: stretch;
      }

      // Outline appearance with proper tokens
      &.mat-form-field-appearance-outline {
        .mdc-text-field {
          height: 44px;
          background-color: var(--md-sys-color-surface);
          border-radius: 6px;
          padding: 0;

          // Use Material's outline tokens instead of custom borders
          &.mdc-text-field--outlined {
            .mdc-notched-outline {
              .mdc-notched-outline__leading,
              .mdc-notched-outline__trailing,
              .mdc-notched-outline__notch {
                border-color: var(--mdc-outlined-text-field-outline-color);
              }
            }

            &:hover .mdc-notched-outline {
              .mdc-notched-outline__leading,
              .mdc-notched-outline__trailing,
              .mdc-notched-outline__notch {
                border-color: var(--mdc-outlined-text-field-hover-outline-color);
              }
            }

            &.mdc-text-field--focused .mdc-notched-outline {
              .mdc-notched-outline__leading,
              .mdc-notched-outline__trailing,
              .mdc-notched-outline__notch {
                border-color: var(--mdc-outlined-text-field-focus-outline-color);
                border-width: var(--mdc-outlined-text-field-focus-outline-width);
              }
            }
          }

          // Input alignment
          .mat-mdc-form-field-infix {
            padding: 0 16px;
            border: none;
            min-height: 44px;
            display: flex;
            align-items: center;
          }

          input,
          textarea {
            padding: 0;
            height: 100%;
            font-size: 14px;
            font-weight: 400;
            color: var(--mdc-outlined-text-field-input-text-color);
            border: none;
            background: transparent;
            outline: none;

            &::placeholder {
              color: var(--mdc-outlined-text-field-placeholder-text-color);
            }
          }

          textarea {
            padding: 12px 0;
            min-height: 60px;
            resize: vertical;
          }
        }

        // Clean label using CSS custom properties
        .mat-mdc-floating-label {
          font-size: 14px;
          color: var(--mdc-outlined-text-field-label-text-color);
          background-color: var(--md-sys-color-surface);
          padding: 0 4px;
          top: 50%;
          transform: translateY(-50%);
          transition: all 0.2s ease;
          pointer-events: none;

          &.mdc-floating-label--float-above {
            font-size: 12px;
            top: 0;
            transform: translateY(-50%) scale(0.85);
            background-color: var(--md-sys-color-surface);
          }
        }

        // Hide ripple and subscript
        .mdc-line-ripple,
        .mat-mdc-form-field-subscript-wrapper {
          display: none;
        }
      }

      // Icons - properly aligned
      .mat-mdc-form-field-icon-suffix,
      .mat-mdc-form-field-icon-prefix {
        padding: 0 12px;
        display: flex;
        align-items: center;
        height: 44px;

        mat-icon {
          font-size: 20px;
          width: 20px;
          height: 20px;
          color: var(--md-sys-color-on-surface-variant);
        }
      }
    }

    // SELECT - Clean approach with CSS custom properties
    .mat-mdc-select {
      --mat-select-trigger-height: 44px;
      --mat-select-trigger-text-size: 14px;
      --mat-select-trigger-text-color: var(--md-sys-color-on-surface);
      --mat-select-arrow-color: var(--md-sys-color-on-surface-variant);

      &.mat-mdc-select-outlined {
        .mat-mdc-select-trigger {
          height: 44px;
          padding: 0;
        }

        .mat-mdc-select-value {
          padding: 0 16px;
          font-size: 14px;
          color: var(--md-sys-color-on-surface);
          display: flex;
          align-items: center;
          height: 44px;
        }

        .mat-mdc-select-arrow-wrapper {
          padding-right: 16px;

          .mat-mdc-select-arrow {
            color: var(--md-sys-color-on-surface-variant);
          }
        }
      }
    }

    // TOOLBAR - Clean style with CSS custom properties
    .mat-toolbar {
      --mat-toolbar-background-color: var(--md-sys-color-surface);
      --mat-toolbar-title-text-color: var(--md-sys-color-on-surface);

      background-color: var(--md-sys-color-surface);
      color: var(--md-sys-color-on-surface);
      border-bottom: 1px solid var(--md-sys-color-outline-variant);
      height: 56px;
      padding: 0 32px;
      font-weight: 400;

      &.mat-primary {
        background-color: var(--md-sys-color-surface);
      }
    }

    // TYPOGRAPHY - Using M3 typescale tokens
    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
      color: var(--md-sys-color-on-surface);
      margin-top: 0;
    }

    h1 {
      font: var(--md-sys-typescale-headline-large-font);
      font-size: var(--md-sys-typescale-headline-large-size);
      font-weight: var(--md-sys-typescale-headline-large-weight);
      line-height: var(--md-sys-typescale-headline-large-line-height);
      margin-bottom: 12px;
    }

    h2 {
      font: var(--md-sys-typescale-headline-medium-font);
      font-size: var(--md-sys-typescale-headline-medium-size);
      font-weight: var(--md-sys-typescale-headline-medium-weight);
      line-height: var(--md-sys-typescale-headline-medium-line-height);
      margin-bottom: 16px;
    }

    h3 {
      font: var(--md-sys-typescale-headline-small-font);
      font-size: var(--md-sys-typescale-headline-small-size);
      font-weight: var(--md-sys-typescale-headline-small-weight);
      line-height: var(--md-sys-typescale-headline-small-line-height);
      margin-bottom: 12px;
    }

    p {
      color: var(--md-sys-color-on-surface-variant);
      line-height: 1.6;
      margin-bottom: 12px;
    }

    // CHECKBOXES & RADIOS - Using tertiary color for selection
    .mat-mdc-checkbox {
      --mdc-checkbox-selected-icon-color: var(--md-sys-color-tertiary);
      --mdc-checkbox-selected-checkmark-color: var(--md-sys-color-on-tertiary);
      --mdc-checkbox-unselected-icon-color: var(--md-sys-color-outline);

      .mdc-checkbox__background {
        border-radius: 4px;
      }
    }

    .mat-mdc-radio-button {
      --mdc-radio-selected-icon-color: var(--md-sys-color-tertiary);
      --mdc-radio-unselected-icon-color: var(--md-sys-color-outline);
    }

    // CHIPS - Clean style with tokens
    .mat-mdc-chip {
      --mdc-chip-container-height: 32px;
      --mdc-chip-container-shape: 16px;
      --mdc-chip-label-text-size: 13px;
      --mdc-chip-label-text-weight: 400;

      border: 1px solid var(--md-sys-color-outline-variant);
      background-color: var(--md-sys-color-surface-variant);
      font-size: 13px;
      font-weight: 400;

      &.mat-mdc-chip-selected {
        background-color: var(--md-sys-color-selected);
        border-color: var(--md-sys-color-outline);
        color: var(--md-sys-color-on-surface);
      }
    }

    // MENU - Same pattern as sidenav but with white background
    .mat-mdc-menu-panel {
      --mat-menu-container-color: var(--md-sys-color-surface);
      --mat-menu-container-shape: var(--md-sys-shape-corner-small);
      --mat-menu-item-label-text-color: var(--md-sys-color-on-surface-variant);
      --mat-menu-item-hover-state-layer-color: transparent;

      border: 1px solid var(--md-sys-color-outline-variant);
      border-radius: var(--md-sys-shape-corner-small);
      background-color: var(--md-sys-color-surface); // White background
      padding: var(--md-sys-spacing-1, 4px) var(--md-sys-spacing-2, 8px); // Add horizontal padding like sidenav
      box-shadow: 0 2px 6px rgb(0 0 0 / 8%);
      min-width: 180px;
      max-width: 280px;
      overflow: hidden;

      .mat-mdc-menu-item {
        // Use same dimensions as sidenav items
        --mdc-list-list-item-container-height: var(--md-sys-spacing-8);
        --mdc-list-list-item-label-text-size: var(--md-sys-typescale-body-medium-size);
        --mdc-list-list-item-label-text-weight: var(--md-sys-typescale-body-medium-weight);
        --mdc-list-list-item-leading-icon-size: var(--md-sys-spacing-4);
        --mdc-list-list-item-trailing-icon-size: var(--md-sys-spacing-4);

        height: var(--md-sys-spacing-8, 32px); // Same as sidenav
        padding: 0 var(--md-sys-spacing-2, 8px); // Same as sidenav
        margin: calc(var(--md-sys-spacing-1) / 2) 0; // Exact same as sidenav - very tight
        border-radius: var(--md-sys-shape-corner-small); // Same as sidenav
        color: var(--md-sys-color-on-surface-variant); // Same as sidenav
        font-size: var(--md-sys-typescale-body-medium-size);
        font-weight: var(--md-sys-typescale-body-medium-weight);
        transition: background-color var(--md-sys-motion-hover);

        // Disable Material's state layer
        &::before {
          opacity: 0;
        }

        // Custom hover state - same as sidenav but more contained
        &:hover:not([disabled]),
        &.mat-mdc-menu-item-highlighted {
          background-color: var(--md-sys-color-hover);
          color: var(--md-sys-color-on-surface-variant);
        }

        // Icon styling - same as sidenav
        mat-icon {
          font-size: 16px;
          width: 16px;
          height: 16px;
          margin-right: 10px;
          color: var(--md-sys-color-on-surface-variant);
          transition: color var(--md-sys-motion-hover);
          display: inline-flex;
          align-items: center;
          justify-content: center;
        }

        // Text content - combined styling with overflow handling
        .mat-mdc-menu-item-text {
          display: flex;
          align-items: center;
          flex: 1;
          color: inherit;
          font-size: var(--md-sys-typescale-body-medium-size);
          line-height: var(--md-sys-typescale-body-medium-line-height);
          white-space: nowrap;
          overflow: hidden;
          text-overflow: ellipsis;
        }

        // Trailing icon (chevron, etc.)
        .mat-mdc-menu-item-submenu-trigger-icon {
          font-size: var(--md-sys-spacing-4, 16px);
          width: var(--md-sys-spacing-4, 16px);
          height: var(--md-sys-spacing-4, 16px);
          color: var(--md-sys-color-on-surface-variant);
        }

        // Disabled state
        &[disabled] {
          opacity: 0.38;
          cursor: not-allowed;

          mat-icon {
            opacity: 0.38;
          }
        }

        // Destructive actions (like delete) - keep error styling
        &.mat-warn,
        &[color='warn'] {
          color: var(--md-sys-color-error);

          mat-icon {
            color: var(--md-sys-color-error);
          }

          &:hover {
            background-color: var(--md-sys-color-error-container);
            color: var(--md-sys-color-on-error-container);

            mat-icon {
              color: var(--md-sys-color-on-error-container);
            }
          }
        }
      }

      // Menu dividers
      .mat-mdc-menu-item-divider,
      hr {
        border-top: 1px solid var(--md-sys-color-outline-variant);
        margin: var(--md-sys-spacing-4, 4px) 0;
        border-bottom: none;
        border-left: none;
        border-right: none;
      }
    }

    // PROGRESS - Using tertiary color
    .mat-mdc-progress-bar {
      --mdc-linear-progress-active-indicator-color: var(--md-sys-color-tertiary);
      --mdc-linear-progress-track-color: var(--md-sys-color-surface-container-high);

      height: 4px;
      border-radius: 2px;
    }

    .mat-mdc-progress-spinner {
      --mdc-circular-progress-active-indicator-color: var(--md-sys-color-tertiary);
    }

    // SNACKBAR - Dark container for contrast
    .mat-mdc-snack-bar-container {
      --mdc-snackbar-container-color: var(--md-sys-color-inverse-surface);
      --mdc-snackbar-supporting-text-color: var(--md-sys-color-inverse-on-surface);
      --mdc-snackbar-container-shape: 8px;

      border-radius: 8px;

      .mat-mdc-snack-bar-action {
        color: var(--md-sys-color-tertiary);
      }
    }

    // DIALOG - Clean modal style
    .mat-mdc-dialog-container {
      --mdc-dialog-container-color: var(--md-sys-color-surface);
      --mdc-dialog-container-shape: 12px;

      border: 1px solid var(--md-sys-color-outline-variant);
      border-radius: 12px;
      padding: 32px;
      background-color: var(--md-sys-color-surface);
    }

    // TABLE - Clean data presentation
    table.mat-mdc-table {
      border: 1px solid var(--md-sys-color-outline-variant);
      border-radius: 8px;
      overflow: hidden;
      background-color: var(--md-sys-color-surface);

      .mat-mdc-header-row {
        background-color: var(--md-sys-color-surface-variant);
        height: 48px;
        border-bottom: 1px solid var(--md-sys-color-outline-variant);
      }

      .mat-mdc-row {
        height: 52px;
        border-bottom: 1px solid var(--md-sys-color-outline-variant);

        &:hover {
          background-color: var(--md-sys-color-hover);
        }

        &:last-child {
          border-bottom: none;
        }
      }

      .mat-mdc-cell,
      .mat-mdc-header-cell {
        font-size: 14px;
        padding: 0 16px;
      }

      .mat-mdc-header-cell {
        font-weight: 500;
        color: var(--md-sys-color-on-surface-variant);
      }

      .mat-mdc-cell {
        color: var(--md-sys-color-on-surface);
      }
    }

    // SLIDE TOGGLE - Tertiary accent
    .mat-mdc-slide-toggle {
      --mdc-switch-selected-track-color: var(--md-sys-color-tertiary);
      --mdc-switch-selected-handle-color: var(--md-sys-color-on-tertiary);
      --mdc-switch-selected-hover-track-color: var(--md-sys-color-tertiary);
      --mdc-switch-unselected-track-color: var(--md-sys-color-outline);
      --mdc-switch-unselected-handle-color: var(--md-sys-color-surface);
    }

    // TOOLTIP - Inverse colors for contrast
    .mat-mdc-tooltip {
      --mdc-plain-tooltip-container-color: var(--md-sys-color-inverse-surface);
      --mdc-plain-tooltip-supporting-text-color: var(--md-sys-color-inverse-on-surface);
      --mdc-plain-tooltip-container-shape: 6px;

      background-color: var(--md-sys-color-inverse-surface);
      color: var(--md-sys-color-inverse-on-surface);
      font-size: 12px;
      padding: 6px 10px;
      border-radius: 6px;
    }

    // ICON refinements
    .mat-icon,
    mat-icon {
      font-size: 20px;
      width: 20px;
      height: 20px;
      color: var(--md-sys-color-on-surface-variant);

      &.mat-icon-button mat-icon {
        font-size: 20px;
      }
    }

    // Focus states - subtle
    *:focus-visible {
      outline: 2px solid var(--md-sys-color-focus-ring);
      outline-offset: 2px;
    }

    // Selection
    ::selection {
      background-color: var(--md-sys-color-tertiary-container);
      color: var(--md-sys-color-on-tertiary-container);
    }
  }
}
